name: CI (pnpm + Next + Vercel)

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install pnpm
        run: npm i -g pnpm@9

      - name: Install deps
        run: pnpm install --frozen-lockfile

      # Leagă proiectul local la Vercel și setează env=production (non-interactiv)
      - name: Vercel pull (link project)
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          npx vercel@latest pull --yes --environment=production \
            --token="$VERCEL_TOKEN" \
            --scope "salamgiorgeta85-8868"

      # Generează .vercel/output
      - name: Build with Vercel (prebuild)
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: npx vercel@latest build --token="$VERCEL_TOKEN"

      # Salvează output-ul pentru jobul de deploy
      - name: Upload build output
        uses: actions/upload-artifact@v4
        with:
          name: vercel-build
          path: .vercel/output

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download prebuilt output
        uses: actions/download-artifact@v4
        with:
          name: vercel-build
          # IMPORTANT: descarcă în rădăcina repo-ului, ca să ai ./.vercel/output/…
          path: .

      - name: Deploy to Vercel (prebuilt)
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          npx vercel@latest deploy \
            --prebuilt \
            --prod \
            --yes \
            --token="$VERCEL_TOKEN" \
            --scope "salamgiorgeta85-8868"
