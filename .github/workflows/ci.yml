name: CI (pnpm + Next + Vercel)

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Node + cache pnpm
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      # Instalează pnpm și rulează pnpm install
      - uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: true

      # Leagă repo-ul de proiectul Vercel și trage env-urile (non-interactiv)
      - name: Vercel pull (production)
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          npx vercel@latest pull --yes --environment=production --token="$VERCEL_TOKEN"

      # Build local → .vercel/output (prebuilt)
      - name: Vercel build
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: npx vercel@latest build --token="$VERCEL_TOKEN"

      # Salvează output-ul pentru jobul de deploy
      - name: Upload build output
        uses: actions/upload-artifact@v4
        with:
          name: vercel-build
          path: .vercel/output

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download prebuilt output
        uses: actions/download-artifact@v4
        with:
          name: vercel-build
          path: .

      # Deploy non-interactiv (observă --yes)
      - name: Deploy to Vercel (prebuilt)
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          npx vercel@latest deploy --prebuilt --prod --yes --token="$VERCEL_TOKEN"
