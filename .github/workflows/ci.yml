name: CI (pnpm + Next + Vercel)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

# Secretele trebuie setate în GitHub → Settings → Secrets and variables → Actions
env:
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Enable pnpm (Corepack)
        run: |
          corepack enable
          corepack prepare pnpm@10.15.0 --activate
      - name: Install deps
        run: pnpm install --frozen-lockfile=false
      - name: Lint
        run: pnpm run lint

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Enable pnpm (Corepack)
        run: |
          corepack enable
          corepack prepare pnpm@10.15.0 --activate
      - name: Install deps
        run: pnpm install --frozen-lockfile=false
      - name: Tests
        run: |
          pnpm run -s test || echo "No tests configured"

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Enable pnpm (Corepack)
        run: |
          corepack enable
          corepack prepare pnpm@10.15.0 --activate
      - name: Install deps
        run: pnpm install --frozen-lockfile=false

      # Verifică tokenul devreme ca să nu pice mai târziu
      - name: Check Vercel token (whoami)
        run: npx -y vercel@latest whoami --token "$VERCEL_TOKEN"

      # Folosește VERCEL_ORG_ID și VERCEL_PROJECT_ID din env
      - name: Vercel pull (configure project)
        run: npx -y vercel@latest pull --yes --environment=production --token "$VERCEL_TOKEN"

      - name: Vercel build (prebuild)
        run: npx -y vercel@latest build --prod

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-build
          path: .vercel/output

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: app-build
          path: .vercel/output

      - name: Vercel deploy (prebuilt)
        run: npx -y vercel@latest deploy --prebuilt --prod --token "$VERCEL_TOKEN"
