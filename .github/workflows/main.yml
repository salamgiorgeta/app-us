name: CI (pnpm + Next)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CI: true
  NEXT_TELEMETRY_DISABLED: "1"

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js (v20) + cache pnpm
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml

      - name: Enable Corepack & pnpm v9
        run: |
          corepack enable
          corepack prepare pnpm@9.15.4 --activate
          pnpm -v
          node -v

      # (opțional, dar grăbește instalările între rulari)
      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --prefer-offline --no-frozen-lockfile

      - name: Run lint
        run: pnpm lint

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js (v20) + cache pnpm
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml

      - name: Enable Corepack & pnpm v9
        run: |
          corepack enable
          corepack prepare pnpm@9.15.4 --activate
          pnpm -v

      - name: Restore pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --prefer-offline --no-frozen-lockfile

      # Dacă ai Jest / Vitest, adaptează comanda
      - name: Run tests
        run: pnpm test --if-present

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js (v20) + cache pnpm
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml

      - name: Enable Corepack & pnpm v9
        run: |
          corepack enable
          corepack prepare pnpm@9.15.4 --activate
          pnpm -v

      - name: Restore pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --prefer-offline --no-frozen-lockfile

      - name: Run build
        run: pnpm build

      - name: Upload Next.js build artifact
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: next-build
          path: |
            .next/**
            public/**
          retention-days: 5
