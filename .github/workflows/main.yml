name: CI (pnpm + Next + Vercel)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Enable Corepack + pnpm
        run: |
          corepack enable
          corepack prepare pnpm@9.15.4 --activate

      - name: Cache pnpm
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run lint
        run: pnpm lint

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Enable Corepack + pnpm
        run: |
          corepack enable
          corepack prepare pnpm@9.15.4 --activate

      - name: Cache pnpm
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm test

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Enable Corepack + pnpm
        run: |
          corepack enable
          corepack prepare pnpm@9.15.4 --activate

      - name: Cache pnpm
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run build
        run: pnpm build

      - name: Upload Next.js artifact
        uses: actions/upload-artifact@v4
        with:
          name: next-build
          path: |
            .next
            public
            package.json
            pnpm-lock.yaml
            next.config.js

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: next-build
          path: ./

      - name: Vercel pull (populate .vercel)
        run: |
          npx -y vercel@latest pull --yes --environment=production \
            --token "${{ secrets.VERCEL_TOKEN }}"
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Vercel deploy (prebuilt)
        id: vercel
        run: |
          URL=$(npx -y vercel@latest deploy --prebuilt --prod \
                --token "${{ secrets.VERCEL_TOKEN }}" 2>&1 | tee /dev/stderr | tail -n1)
          echo "url=$URL" >> "$GITHUB_OUTPUT"

      - name: Print deployment URL
        run: echo "âœ… Deployed at ${{ steps.vercel.outputs.url }}"
